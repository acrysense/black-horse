"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.previousElementSibling.style.pointerEvents = 'none';
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      target.previousElementSibling.style.pointerEvents = 'auto';
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    target.previousElementSibling.style.pointerEvents = 'none';
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      target.previousElementSibling.style.pointerEvents = 'auto';
    }, duration);
    target.parentNode.classList.add('is--open');
  };
  var slideToggleQna = function slideToggleQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    if (window.getComputedStyle(target).display === 'none') {
      return slideDownQna(target, duration);
    } else {
      return slideUpQna(target, duration);
    }
  };

  // accordeon
  var accordeonTrigger = document.querySelectorAll('.faq__trigger');
  if (accordeonTrigger) {
    accordeonTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenuTrigger.classList.remove('is--active');
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        mobileMenuTrigger.classList.add('is--active');
        mobileMenu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
  }

  // tabs
  var tabsItems = document.querySelectorAll('.product-equipment__tabs-item');
  if (tabsItems) {
    tabsItems.forEach(function (item, i) {
      item.addEventListener('click', function () {
        var parent = item.closest('.product-equipment__tabs');
        parent.querySelectorAll('.product-equipment__tabs-item').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.product-equipment__wrapper').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        var el = parent.querySelector('.is--active');
        var index = _toConsumableArray(parent.querySelectorAll('.product-equipment__tabs-item')).indexOf(el);
        parent.querySelectorAll('.product-equipment__wrapper')[index].classList.add('is--active');
      });
    });
  }

  // main slider
  var mainSlider = document.querySelector('.main__slider .swiper');
  if (mainSlider) {
    var myMainSlider = new Swiper(mainSlider, {
      slidesPerView: 1,
      loop: true,
      allowTouchMove: false,
      effect: 'fade',
      fadeEffect: {
        crossFade: true
      },
      autoplay: {
        delay: 5000
      },
      pagination: {
        el: '.main__slider .swiper-pagination',
        clickable: true
      }
    });
  }

  // suggestions slider
  var suggestionsSlider = document.querySelectorAll('.suggestions__slider .swiper');
  if (suggestionsSlider) {
    suggestionsSlider.forEach(function (slider) {
      var mySuggestionsSlider = new Swiper(slider, {
        slidesPerView: 1,
        spaceBetween: 20,
        loop: true,
        pagination: {
          el: slider.closest('.suggestions__slider').querySelector('.swiper-pagination'),
          clickable: true
        }
      });
    });
  }

  // special offers slider
  var specialOffersSlider = document.querySelector('.special-offers__slider .swiper');
  if (specialOffersSlider) {
    var mySpecialOffersSlider = new Swiper(specialOffersSlider, {
      slidesPerView: 1,
      slidesPerGroup: 1,
      spaceBetween: 20,
      loop: true,
      pagination: {
        el: '.special-offers__slider .swiper-pagination',
        clickable: true
      }
    });
  }

  // services slider
  var servicesSlider = document.querySelector('.services__slider .swiper');
  if (servicesSlider) {
    var myServicesSlider = new Swiper(servicesSlider, {
      slidesPerView: 1,
      spaceBetween: 20,
      loop: true,
      pagination: {
        el: '.services__slider .swiper-pagination',
        clickable: true
      }
    });
  }

  // product slider
  var galleryThumb = document.querySelector('.product__slider .gallery-thumbs');
  var galleryMain = document.querySelector('.product__slider .gallery-main');
  if (galleryThumb && galleryMain) {
    var mySwiperThumb = new Swiper(galleryThumb, {
      slidesPerView: 4,
      spaceBetween: 16,
      freeMode: true,
      watchSlidesVisibility: true,
      watchSlidesProgress: true,
      thumbs: {
        swiper: mySwiperThumb
      }
    });
    var mySwiperMain = new Swiper(galleryMain, {
      slidesPerView: 1,
      spaceBetween: 0,
      preloadImages: false,
      pagination: {
        el: '.product__slider .swiper-pagination',
        clickable: true
      },
      breakpoints: {
        744: {
          loopedSlides: 4,
          thumbs: {
            swiper: mySwiperThumb
          }
        }
      }
    });
    galleryThumb.querySelectorAll('.swiper-slide').forEach(function (item) {
      item.addEventListener('click', function () {
        galleryThumb.querySelectorAll('.swiper-slide').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        mySwiperMain.slideTo(item.dataset.index);
      });
    });
    mySwiperMain.on('slideChange', function () {
      galleryThumb.querySelectorAll('.swiper-slide').forEach(function (child) {
        return child.classList.remove('is--active');
      });
      galleryThumb.querySelectorAll('.swiper-slide')[mySwiperMain.activeIndex].classList.add('is--active');
    });
  }
});